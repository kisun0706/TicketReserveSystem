plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.ticket_reserve_system'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

// queryDSL 설정
def queryDslProjects = [project]
configure(queryDslProjects) {
	dependencies {
		implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
		annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
		annotationProcessor "jakarta.annotation:jakarta.annotation-api"
		annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	}

	// Querydsl 설정부 >> gradle build 와 intellij ide build 불편함 해소를 위해 추가적인 설정
	def generated = 'src/main/generated'

	// querydsl QClass 파일 생성 위치를 지정
	tasks.withType(JavaCompile).tap {
		configureEach {
			options.getGeneratedSourceOutputDirectory().set(file(generated))
		}
	}

	// java source set 에 querydsl QClass 위치 추가
	sourceSets {
		main.java.srcDirs += [generated]
	}

	// gradle clean 시에 Qclass 디렉토리 삭제
	clean {
		delete file(generated)
	}

	// compileJava 시작 전 Qclass 삭제
	tasks.compileJava.dependsOn clean
}

